/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package carve;

import burp.Highlighter;
import java.io.File;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import javax.swing.JFileChooser;
import javax.swing.JScrollPane;

/**
 *
 * @author asuarez
 */
public class HighlightGUI extends javax.swing.JPanel
{

    /**
     * Creates new form NewJPanel
     */
    public List<carve.gui.RuleJPanel> my_rule_panels = new ArrayList<carve.gui.RuleJPanel>();
    private JFileChooser fc = new JFileChooser();
    
    public HighlightGUI()
    {
        initComponents();

        //Initialize options
        Highlighter.my_options = new Options();

        persistenceCB.setSelected(Options.persist);
        persistencePathTB.setText(Options.save_dir.toString());
        debugModeCB.setSelected(Options.debug);

        if (debugModeCB.isSelected())
        {
            debugBTN.setVisible(true);
        } else
        {
            debugBTN.setVisible(false);
        }

        // Restrict FileChooser to directories only
        fc.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);

    }

    public void dbgRules()
    {
        for (carve.gui.RuleJPanel rule_panel : my_rule_panels)
        {
            Highlighter.debugf("%s", rule_panel.ruleNameTXT.getText());
        }
    }

    public void addRule(Rule rule)
    {
        //ToDo: Dynamically assigned next color index
        carve.gui.RuleJPanel new_rule = new carve.gui.RuleJPanel(rule, this);
//        new_rule.ruleColorCB.setSelectedIndex(rule.getID() % 8);
        currentRulesPanel.add(new_rule);
        my_rule_panels.add(new_rule);
        revalidate();
    }

    public void removeRule(carve.gui.RuleJPanel rule)
    {
        my_rule_panels.remove(rule);
        currentRulesPanel.remove(rule);
        repaint();
        revalidate();

        Highlighter.removeRule(rule.getID());
    }

    public void clearRules()
    {
        // Can't use for loop here because it calls remove on the ArrayList,
        // leading to ConcurrentModificationException
        Iterator itr = my_rule_panels.iterator();

        while (itr.hasNext())
        {
            carve.gui.RuleJPanel target = (carve.gui.RuleJPanel) itr.next();
            currentRulesPanel.remove(target);
            Highlighter.removeRule(target.getID());
            itr.remove();
        }

        repaint();
        revalidate();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(32767, 32767));
        jTabbedPane1 = new javax.swing.JTabbedPane();
        rulesSCPanel = new javax.swing.JPanel();
        outerPanel = new javax.swing.JPanel();
        buttonContainer = new javax.swing.JPanel();
        addRuleBTN = new javax.swing.JButton();
        clearRulesBTN = new javax.swing.JButton();
        scanBTN = new javax.swing.JButton();
        debugBTN = new javax.swing.JButton();
        exportRulesBTN = new javax.swing.JButton();
        importRulesBTN = new javax.swing.JButton();
        csLogo = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        currentRulesPanel = new carve.gui.currentRulesPanel();
        optionsPanel = new javax.swing.JPanel();
        debugModeCB = new javax.swing.JCheckBox();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        persistencePathTB = new javax.swing.JTextField();
        persistenceCB = new javax.swing.JCheckBox();
        browseDirBTN = new javax.swing.JButton();
        aboutPanel = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();

        jTabbedPane1.setAutoscrolls(true);

        rulesSCPanel.setAutoscrolls(true);

        addRuleBTN.setText("Add rule");
        addRuleBTN.setMaximumSize(new java.awt.Dimension(126, 29));
        addRuleBTN.setMinimumSize(new java.awt.Dimension(126, 29));
        addRuleBTN.setPreferredSize(new java.awt.Dimension(126, 29));
        addRuleBTN.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                addRuleBTNMouseClicked(evt);
            }
        });
        buttonContainer.add(addRuleBTN);

        clearRulesBTN.setText("Clear rules");
        clearRulesBTN.setMaximumSize(new java.awt.Dimension(126, 29));
        clearRulesBTN.setMinimumSize(new java.awt.Dimension(126, 29));
        clearRulesBTN.setPreferredSize(new java.awt.Dimension(126, 29));
        clearRulesBTN.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                clearRulesBTNMouseClicked(evt);
            }
        });
        clearRulesBTN.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                clearRulesBTNActionPerformed(evt);
            }
        });
        buttonContainer.add(clearRulesBTN);

        scanBTN.setText("Scan history");
        scanBTN.setPreferredSize(new java.awt.Dimension(126, 29));
        scanBTN.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                scanBTNMouseClicked(evt);
            }
        });
        buttonContainer.add(scanBTN);

        debugBTN.setForeground(new java.awt.Color(255, 51, 0));
        debugBTN.setText("Debug");
        debugBTN.setMaximumSize(new java.awt.Dimension(126, 29));
        debugBTN.setMinimumSize(new java.awt.Dimension(126, 29));
        debugBTN.setPreferredSize(new java.awt.Dimension(126, 29));
        debugBTN.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                debugBTNMouseClicked(evt);
            }
        });
        debugBTN.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                debugBTNActionPerformed(evt);
            }
        });
        buttonContainer.add(debugBTN);

        exportRulesBTN.setText("Export rules");
        exportRulesBTN.setMaximumSize(new java.awt.Dimension(126, 29));
        exportRulesBTN.setMinimumSize(new java.awt.Dimension(126, 29));
        exportRulesBTN.setPreferredSize(new java.awt.Dimension(126, 29));
        exportRulesBTN.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                exportRulesBTNMouseClicked(evt);
            }
        });
        buttonContainer.add(exportRulesBTN);

        importRulesBTN.setText("Import rules");
        importRulesBTN.setMaximumSize(new java.awt.Dimension(126, 29));
        importRulesBTN.setMinimumSize(new java.awt.Dimension(126, 29));
        importRulesBTN.setPreferredSize(new java.awt.Dimension(126, 29));
        importRulesBTN.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                importRulesBTNMouseClicked(evt);
            }
        });
        buttonContainer.add(importRulesBTN);

        javax.swing.GroupLayout outerPanelLayout = new javax.swing.GroupLayout(outerPanel);
        outerPanel.setLayout(outerPanelLayout);
        outerPanelLayout.setHorizontalGroup(
            outerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(outerPanelLayout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addComponent(buttonContainer, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        outerPanelLayout.setVerticalGroup(
            outerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(outerPanelLayout.createSequentialGroup()
                .addComponent(buttonContainer, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 23, Short.MAX_VALUE))
        );

        csLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/carve_logo.png"))); // NOI18N

        currentRulesPanel.setLayout(new javax.swing.BoxLayout(currentRulesPanel, javax.swing.BoxLayout.Y_AXIS));
        jScrollPane1.setViewportView(currentRulesPanel);

        javax.swing.GroupLayout rulesSCPanelLayout = new javax.swing.GroupLayout(rulesSCPanel);
        rulesSCPanel.setLayout(rulesSCPanelLayout);
        rulesSCPanelLayout.setHorizontalGroup(
            rulesSCPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(rulesSCPanelLayout.createSequentialGroup()
                .addGroup(rulesSCPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(outerPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(csLogo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 891, Short.MAX_VALUE)
                .addContainerGap())
        );
        rulesSCPanelLayout.setVerticalGroup(
            rulesSCPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(rulesSCPanelLayout.createSequentialGroup()
                .addComponent(outerPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addComponent(csLogo, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(rulesSCPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Rules", rulesSCPanel);

        debugModeCB.setText("Enable debug mode");
        debugModeCB.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                debugModeCBActionPerformed(evt);
            }
        });

        jLabel5.setText("Plugin global options");

        jLabel6.setText("Rule persistence directory path");

        persistencePathTB.setEnabled(false);
        persistencePathTB.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                persistencePathTBActionPerformed(evt);
            }
        });

        persistenceCB.setText("Rule persistence enabled");
        persistenceCB.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        persistenceCB.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                persistenceCBActionPerformed(evt);
            }
        });

        browseDirBTN.setText("Browse");
        browseDirBTN.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                browseDirBTNMouseClicked(evt);
            }
        });
        browseDirBTN.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                browseDirBTNActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout optionsPanelLayout = new javax.swing.GroupLayout(optionsPanel);
        optionsPanel.setLayout(optionsPanelLayout);
        optionsPanelLayout.setHorizontalGroup(
            optionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(optionsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(optionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1)
                    .addGroup(optionsPanelLayout.createSequentialGroup()
                        .addGroup(optionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(persistenceCB)
                            .addGroup(optionsPanelLayout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(persistencePathTB, javax.swing.GroupLayout.PREFERRED_SIZE, 307, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(browseDirBTN))
                            .addComponent(debugModeCB))
                        .addGap(0, 478, Short.MAX_VALUE)))
                .addContainerGap())
        );
        optionsPanelLayout.setVerticalGroup(
            optionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(optionsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(persistenceCB)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(optionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(persistencePathTB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(browseDirBTN))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(debugModeCB)
                .addContainerGap(256, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Options", optionsPanel);

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/carve_logo.png"))); // NOI18N

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jLabel1.setText("Angel Suarez-B. Martin");

        jLabel2.setText("angel.martin@carvesystems.com");

        jLabel4.setText("https://www.carvesystems.com");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel4))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4))
        );

        aboutPanel.add(jPanel3);

        jTabbedPane1.addTab("About", aboutPanel);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void debugBTNMouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_debugBTNMouseClicked
    {//GEN-HEADEREND:event_debugBTNMouseClicked
        Highlighter.printDebugInfo();
    }//GEN-LAST:event_debugBTNMouseClicked

    private void scanBTNMouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_scanBTNMouseClicked
    {//GEN-HEADEREND:event_scanBTNMouseClicked
        Highlighter.scanHistory();
    }//GEN-LAST:event_scanBTNMouseClicked

    private void addRuleBTNMouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_addRuleBTNMouseClicked
    {//GEN-HEADEREND:event_addRuleBTNMouseClicked
        Highlighter.createRule();
    }//GEN-LAST:event_addRuleBTNMouseClicked

    private void exportRulesBTNMouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_exportRulesBTNMouseClicked
    {//GEN-HEADEREND:event_exportRulesBTNMouseClicked
        Highlighter.exportRules();
    }//GEN-LAST:event_exportRulesBTNMouseClicked

    private void importRulesBTNMouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_importRulesBTNMouseClicked
    {//GEN-HEADEREND:event_importRulesBTNMouseClicked
        Highlighter.importRules();
    }//GEN-LAST:event_importRulesBTNMouseClicked

    private void debugBTNActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_debugBTNActionPerformed
    {//GEN-HEADEREND:event_debugBTNActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_debugBTNActionPerformed

    private void clearRulesBTNMouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_clearRulesBTNMouseClicked
    {//GEN-HEADEREND:event_clearRulesBTNMouseClicked
        clearRules();
    }//GEN-LAST:event_clearRulesBTNMouseClicked

    private void clearRulesBTNActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_clearRulesBTNActionPerformed
    {//GEN-HEADEREND:event_clearRulesBTNActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_clearRulesBTNActionPerformed

    private void persistenceCBActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_persistenceCBActionPerformed
    {//GEN-HEADEREND:event_persistenceCBActionPerformed
        if (persistenceCB.isSelected())
            Options.setPersist("True");
        else
            Options.setPersist("False");
    }//GEN-LAST:event_persistenceCBActionPerformed

    private void persistencePathTBActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_persistencePathTBActionPerformed
    {//GEN-HEADEREND:event_persistencePathTBActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_persistencePathTBActionPerformed

    private void browseDirBTNMouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_browseDirBTNMouseClicked
    {//GEN-HEADEREND:event_browseDirBTNMouseClicked


    }//GEN-LAST:event_browseDirBTNMouseClicked

    private void browseDirBTNActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_browseDirBTNActionPerformed
    {//GEN-HEADEREND:event_browseDirBTNActionPerformed
        int returnVal = fc.showOpenDialog(this);

        if (returnVal == JFileChooser.APPROVE_OPTION)
        {
            Highlighter.printf("\n IF --");
            File file = fc.getSelectedFile();
            Highlighter.printf("\n my path: %s", file.getAbsolutePath());

            Options.setSaveDir(file.getAbsolutePath());
            Highlighter.printf("\n Exit action --");
            persistencePathTB.setText(file.getAbsolutePath());

        }
    }//GEN-LAST:event_browseDirBTNActionPerformed

    private void debugModeCBActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_debugModeCBActionPerformed
    {//GEN-HEADEREND:event_debugModeCBActionPerformed
        if (debugModeCB.isSelected())
        {
            Options.setDebug("True");
            debugBTN.setVisible(true);
        } else
        {
            Options.setDebug("False");
            debugBTN.setVisible(false);
        }
    }//GEN-LAST:event_debugModeCBActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel aboutPanel;
    private javax.swing.JButton addRuleBTN;
    private javax.swing.JButton browseDirBTN;
    private javax.swing.JPanel buttonContainer;
    private javax.swing.JButton clearRulesBTN;
    private javax.swing.JLabel csLogo;
    private carve.gui.currentRulesPanel currentRulesPanel;
    private javax.swing.JButton debugBTN;
    private javax.swing.JCheckBox debugModeCB;
    private javax.swing.JButton exportRulesBTN;
    private javax.swing.Box.Filler filler1;
    private javax.swing.JButton importRulesBTN;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JPanel optionsPanel;
    private javax.swing.JPanel outerPanel;
    private javax.swing.JCheckBox persistenceCB;
    private javax.swing.JTextField persistencePathTB;
    private javax.swing.JPanel rulesSCPanel;
    private javax.swing.JButton scanBTN;
    // End of variables declaration//GEN-END:variables
}
